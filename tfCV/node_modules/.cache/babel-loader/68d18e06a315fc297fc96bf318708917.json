{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nimport { reduce } from '../kernel_utils/reduce';\nimport { reshape } from '../kernel_utils/reshape';\nexport function maxImpl(x, reduceShape, outShape, backend) {\n  const inSize = util.sizeFromShape(reduceShape);\n  const xSize = util.sizeFromShape(x.shape);\n  const batchSize = xSize / inSize;\n  const reshapedInput = reshape(x, [batchSize, inSize], backend);\n  const reduced = reduce(reshapedInput, x.dtype, 'max', backend);\n\n  if (reshapedInput.dataId !== x.dataId) {\n    // dispose the output of the packed reshape.\n    backend.disposeData(reshapedInput.dataId);\n  }\n\n  return reshape(reduced, outShape, backend);\n}","map":{"version":3,"sources":["../../src/kernels/Max_impl.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAoB,IAApB,QAA+B,uBAA/B;AAGA,SAAQ,MAAR,QAAqB,wBAArB;AACA,SAAQ,OAAR,QAAsB,yBAAtB;AAEA,OAAM,SAAU,OAAV,CACF,CADE,EACa,WADb,EACoC,QADpC,EAEF,OAFE,EAEuB;AAC3B,QAAM,MAAM,GAAG,IAAI,CAAC,aAAL,CAAmB,WAAnB,CAAf;AACA,QAAM,KAAK,GAAG,IAAI,CAAC,aAAL,CAAmB,CAAC,CAAC,KAArB,CAAd;AACA,QAAM,SAAS,GAAG,KAAK,GAAG,MAA1B;AACA,QAAM,aAAa,GAAG,OAAO,CAAC,CAAD,EAAI,CAAC,SAAD,EAAY,MAAZ,CAAJ,EAAyB,OAAzB,CAA7B;AACA,QAAM,OAAO,GAAG,MAAM,CAAC,aAAD,EAAgB,CAAC,CAAC,KAAlB,EAAyB,KAAzB,EAAgC,OAAhC,CAAtB;;AAEA,MAAI,aAAa,CAAC,MAAd,KAAyB,CAAC,CAAC,MAA/B,EAAuC;AACrC;AACA,IAAA,OAAO,CAAC,WAAR,CAAoB,aAAa,CAAC,MAAlC;AACD;;AAED,SAAO,OAAO,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,CAAd;AACD","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nimport { reduce } from '../kernel_utils/reduce';\nimport { reshape } from '../kernel_utils/reshape';\nexport function maxImpl(x, reduceShape, outShape, backend) {\n    const inSize = util.sizeFromShape(reduceShape);\n    const xSize = util.sizeFromShape(x.shape);\n    const batchSize = xSize / inSize;\n    const reshapedInput = reshape(x, [batchSize, inSize], backend);\n    const reduced = reduce(reshapedInput, x.dtype, 'max', backend);\n    if (reshapedInput.dataId !== x.dataId) {\n        // dispose the output of the packed reshape.\n        backend.disposeData(reshapedInput.dataId);\n    }\n    return reshape(reduced, outShape, backend);\n}\n//# sourceMappingURL=Max_impl.js.map"]},"metadata":{},"sourceType":"module"}