{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { concat } from '../../ops/concat';\nimport { Tensor } from '../../tensor';\n\nTensor.prototype.concat = function (x, axis) {\n  this.throwIfDisposed();\n\n  if (x instanceof Tensor) {\n    x = [x];\n  }\n\n  return concat([this, ...x], axis);\n};","map":{"version":3,"sources":["../../../src/public/chained_ops/concat.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,SAAQ,MAAR,QAAqB,kBAArB;AACA,SAAQ,MAAR,QAAqB,cAArB;;AASA,MAAM,CAAC,SAAP,CAAiB,MAAjB,GAA0B,UACtB,CADsB,EACI,IADJ,EACiB;AACzC,OAAK,eAAL;;AACA,MAAI,CAAC,YAAY,MAAjB,EAAyB;AACvB,IAAA,CAAC,GAAG,CAAC,CAAD,CAAJ;AACD;;AACD,SAAO,MAAM,CAAC,CAAC,IAAD,EAAO,GAAG,CAAV,CAAD,EAAe,IAAf,CAAb;AACD,CAPD","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { concat } from '../../ops/concat';\nimport { Tensor } from '../../tensor';\nTensor.prototype.concat = function (x, axis) {\n    this.throwIfDisposed();\n    if (x instanceof Tensor) {\n        x = [x];\n    }\n    return concat([this, ...x], axis);\n};\n//# sourceMappingURL=concat.js.map"]},"metadata":{},"sourceType":"module"}