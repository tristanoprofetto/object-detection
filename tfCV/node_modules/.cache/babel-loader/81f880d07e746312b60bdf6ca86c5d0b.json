{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Abs } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes absolute value element-wise: `abs(x)`\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n *\n * x.abs().print();  // or tf.abs(x)\n * ```\n * @param x The input `tf.Tensor`.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\n\nfunction abs_(x) {\n  const $x = convertToTensor(x, 'x', 'abs');\n  const inputs = {\n    x: $x\n  };\n  return ENGINE.runKernelFunc((backend, save) => {\n    save([$x]);\n\n    if ($x.dtype === 'complex64') {\n      return backend.complexAbs($x);\n    }\n\n    return backend.abs($x);\n  }, inputs, null\n  /* grad */\n  , Abs);\n}\n\nexport const abs = op({\n  abs_\n});","map":{"version":3,"sources":["../../src/ops/abs.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQ,MAAR,QAAqB,WAArB;AACA,SAAQ,GAAR,QAA6B,iBAA7B;AAGA,SAAQ,eAAR,QAA8B,oBAA9B;AAGA,SAAQ,EAAR,QAAiB,aAAjB;AAEA;;;;;;;;;;;;;AAYA,SAAS,IAAT,CAAgC,CAAhC,EAA+C;AAC7C,QAAM,EAAE,GAAG,eAAe,CAAC,CAAD,EAAI,GAAJ,EAAS,KAAT,CAA1B;AAEA,QAAM,MAAM,GAAc;AAAC,IAAA,CAAC,EAAE;AAAJ,GAA1B;AAEA,SAAO,MAAM,CAAC,aAAP,CAAqB,CAAC,OAAD,EAAU,IAAV,KAAkB;AAC5C,IAAA,IAAI,CAAC,CAAC,EAAD,CAAD,CAAJ;;AACA,QAAI,EAAE,CAAC,KAAH,KAAa,WAAjB,EAA8B;AAC5B,aAAO,OAAO,CAAC,UAAR,CAAmB,EAAnB,CAAP;AACD;;AAED,WAAO,OAAO,CAAC,GAAR,CAAY,EAAZ,CAAP;AACD,GAPM,EAOJ,MAPI,EAO4B;AAAK;AAPjC,IAO6C,GAP7C,CAAP;AAQD;;AAED,OAAO,MAAM,GAAG,GAAG,EAAE,CAAC;AAAC,EAAA;AAAD,CAAD,CAAd","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Abs } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes absolute value element-wise: `abs(x)`\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n *\n * x.abs().print();  // or tf.abs(x)\n * ```\n * @param x The input `tf.Tensor`.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction abs_(x) {\n    const $x = convertToTensor(x, 'x', 'abs');\n    const inputs = { x: $x };\n    return ENGINE.runKernelFunc((backend, save) => {\n        save([$x]);\n        if ($x.dtype === 'complex64') {\n            return backend.complexAbs($x);\n        }\n        return backend.abs($x);\n    }, inputs, null /* grad */, Abs);\n}\nexport const abs = op({ abs_ });\n//# sourceMappingURL=abs.js.map"]},"metadata":{},"sourceType":"module"}