{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Selu } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes scaled exponential linear element-wise.\n *\n * `x < 0 ? scale * alpha * (exp(x) - 1) : x`\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n *\n * x.selu().print();  // or tf.selu(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\n\nfunction selu_(x) {\n  const $x = convertToTensor(x, 'x', 'selu');\n\n  const forward = (backend, save) => {\n    const res = backend.selu($x);\n    save([$x]);\n    return res;\n  };\n\n  const inputs = {\n    x: $x\n  };\n  return ENGINE.runKernelFunc(forward, inputs, null\n  /* grad */\n  , Selu);\n}\n\nexport const selu = op({\n  selu_\n});","map":{"version":3,"sources":["../../src/ops/selu.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQ,MAAR,QAAkC,WAAlC;AACA,SAAQ,IAAR,QAA+B,iBAA/B;AAGA,SAAQ,eAAR,QAA8B,oBAA9B;AAGA,SAAQ,EAAR,QAAiB,aAAjB;AAEA;;;;;;;;;;;;;;;AAcA,SAAS,KAAT,CAAiC,CAAjC,EAAgD;AAC9C,QAAM,EAAE,GAAG,eAAe,CAAC,CAAD,EAAI,GAAJ,EAAS,MAAT,CAA1B;;AAEA,QAAM,OAAO,GAAwB,CAAC,OAAD,EAAU,IAAV,KAAkB;AACrD,UAAM,GAAG,GAAG,OAAO,CAAC,IAAR,CAAa,EAAb,CAAZ;AACA,IAAA,IAAI,CAAC,CAAC,EAAD,CAAD,CAAJ;AACA,WAAO,GAAP;AACD,GAJD;;AAMA,QAAM,MAAM,GAAe;AAAC,IAAA,CAAC,EAAE;AAAJ,GAA3B;AAEA,SAAO,MAAM,CAAC,aAAP,CACI,OADJ,EACa,MADb,EAC6C;AAAK;AADlD,IAC8D,IAD9D,CAAP;AAGD;;AAED,OAAO,MAAM,IAAI,GAAG,EAAE,CAAC;AAAC,EAAA;AAAD,CAAD,CAAf","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Selu } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes scaled exponential linear element-wise.\n *\n * `x < 0 ? scale * alpha * (exp(x) - 1) : x`\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n *\n * x.selu().print();  // or tf.selu(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction selu_(x) {\n    const $x = convertToTensor(x, 'x', 'selu');\n    const forward = (backend, save) => {\n        const res = backend.selu($x);\n        save([$x]);\n        return res;\n    };\n    const inputs = { x: $x };\n    return ENGINE.runKernelFunc(forward, inputs, null /* grad */, Selu);\n}\nexport const selu = op({ selu_ });\n//# sourceMappingURL=selu.js.map"]},"metadata":{},"sourceType":"module"}